*** USESTATE ***

exemplo1:

    import React, { useState } from "react";

    function App() {
      const [counter, setCounter] = useState(0);
      return (
        <div>
          <div>Counter: {counter}</div>
          <button type="button" onClick={() => setCounter(counter + 1)}>
            Increase Counter
          </button>
        </div>
      );
    }

    export default App;



*** USECONTEXT ***

Primeiro criamos o Context:


    import { createContext } from 'react';

    const AppContext = createContext();

    export default AppContext;


Em seguida criamos o Provider:



    import React, { useState } from 'react';
    import AppContext from './AppContext';

    function Provider({ children }) {
      const [stateA, setStateA] = useState('initialStateA');
      const [stateB, setStateB] = useState('initialStateB');
      const contextValue = {
        stateA,
        setStateA,
        stateB,
        setStateB,
      };

      return (
        <AppContext.Provider value={contextValue}>
          {children}
        </AppContext.Provider>
      );
    }

    export default Provider;


Com o Context e o Provider criados, precisamos adicionar o Provider à aplicação:



    import React from 'react'
    import ReactDOM from 'react-dom'

    import App from './App'
    import Provider from '../utils/Provider'

    ReactDOM.render(
      <Provider>
        <App />
      </Provider>,
      document.getElementById('root')
    )


Com o setup concluído, podemos utilizar o estado criado no Provider em qualquer componente que for necessário utilizando o useContext . Pra isso, precisamos importar o Context e o useContext :


    import React, { useContext } from 'react';
    import AppContext from '../utils/AppContext';

    const ComponenteX = () => {
      const { stateA, setStateA, stateB } = useContext(AppContext);

      return (
        <div>
          <p>{stateA}</p>
          <p>{stateB}</p>
          <button onClick={() => setStateA("newState")}>Click</button>
        </div>
      );
    };

    export default ComponenteX;


