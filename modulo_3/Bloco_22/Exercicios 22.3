**EXERCICIOS 22.3**

*Desafios sobre VIEW*

1 - Crie uma view chamada film_with_categories utilizando as tabelas category , film_category e film do banco de dados sakila . Essa view deve exibir o título do filme, o id da categoria e o nome da categoria, conforme a imagem abaixo. Os resultados devem ser ordenados pelo título do filme.

    USE sakila;
    CREATE VIEW film_with_categories AS
	    SELECT
		    F.title AS título,
		    FC.category_id AS `id da categoria`,
		    C.name
	    FROM sakila.film AS F
	    INNER JOIN sakila.film_category AS FC ON F.film_id = FC.film_id
	    INNER JOIN sakila.category AS C ON C.category_id = FC.category_id
	    ORDER BY título;

2 - Crie uma view chamada film_info utilizando as tabelas actor , film_actor e film do banco de dados sakila . Sua view deve exibir o actor_id , o nome completo do ator ou da atriz em uma coluna com o ALIAS actor e o título dos filmes. Os resultados devem ser ordenados pelos nomes de atores e atrizes. Use a imagem a seguir como referência.

    CREATE VIEW film_info AS
	    SELECT
		    A.actor_id AS id,
		    CONCAT(A.first_name, ' ', A.last_name) AS actor,
		    F.title
	    FROM sakila.actor AS A
	    INNER JOIN sakila.film_actor AS FA ON A.actor_id = FA.actor_id
	    INNER JOIN sakila.film AS F ON FA.film_id = F.film_id
	    ORDER BY actor;

3 - Crie uma view chamada address_info que faça uso das tabelas address e city do banco de dados sakila . Sua view deve exibir o address_id , o address , o district , o city_id e a city . Os resultados devem ser ordenados pelo nome das cidades. Use a imagem abaixo como referência.

    CREATE VIEW address_info AS
	    SELECT
		    A.address_id AS id,
		    A.address,
		    A.district,
		    C.city_id,
		    C.city
	    FROM sakila.address AS A
	    INNER JOIN sakila.city AS C ON A.city_id = C.city_id
	    ORDER BY C.city;

4 - Crie uma view chamada movies_languages , usando as tabelas film e language do banco de dados sakila . Sua view deve exibir o título do filme , o id do idioma e o idioma do filme , como na imagem a seguir.

    CREATE VIEW movies_languages AS
	    SELECT
		    F.title,
		    L.language_id,
		    L.`name`
	    FROM sakila.film AS F
	    INNER JOIN sakila.`language` AS L ON F.language_id = L.language_id;


*DESAFIOS DE INDEX*

1 - Verifique o impacto de um FULLTEXT INDEX na tabela category (banco de dados sakila ), adicionando-o na coluna name . Após ter adicionado o índice, mensure o custo da query utilizando o execution plan, como já foi feito em lições anteriores. Após ter criado e mensurado o custo da query, exclua o índice e mensure novamente esse custo.

    CREATE FULLTEXT INDEX category_name_index ON sakila.category(name);

    SELECT *
    FROM sakila.category
    WHERE MATCH(name) AGAINST('action');

    DROP INDEX category_name_index ON category;

    SELECT *
    FROM sakila.category
    WHERE name LIKE '%action%';

2 - Verifique o impacto de um INDEX na tabela address (banco de dados sakila ) adicionando-o na coluna postal_code . Após ter adicionado o índice, mensure o custo da query utilizando o execution plan, como já foi feito em lições anteriores. Após ter criado e mensurado o custo da query, exclua o índice e mensure novamente esse custo.
Copiar

    CREATE INDEX  address_postal_code  ON sakila.adress(postal_code)

    SELECT * FROM sakila.address WHERE postal_code = '36693';

    DROP INDEX address_postal_code ON sakila.address;

    SELECT * FROM sakila.address WHERE postal_code = '36693';



*Desafios sobre ALTER TABLE*

1 - Escreva uma query SQL para alterar na tabela localtions o nome da coluna street_address para address , mantendo o mesmo tipo e tamanho de dados.

    ALTER TABLE hr.locations CHANGE street_address address VARCHAR(40);

2 - Escreva uma query SQL para alterar o nome da coluna region_name para region , mantendo o mesmo tipo e tamanho de dados.

    ALTER TABLE hr.regions CHANGE region_name region VARCHAR(25);

3 - Escreva uma query SQL para alterar o nome da coluna country_name para country , mantendo o mesmo tipo e tamanho de dados.

    ALTER TABLE hr.countries CHANGE COLUMN country_name country VARCHAR(40);

