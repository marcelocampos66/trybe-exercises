$lookup (let/pipeline)

Sintaxe:

    db.collection.aggregate([
      {
       $lookup:
         {
           from: <coleção para unir>,
           let: { <var_1>: <expressão>, …, <var_n>: <expressão> },
           pipeline: [ <pipeline a ser executada na coleção unida> ],
           as: <campo do array de saída>
         }
    }
    ]);

Exemplo:

    db.orders.aggregate([
       {
          $lookup:
             {
               from: "warehouses",
               let: { order_item: "$item", order_qty: "$ordered" },
               pipeline: [
                  { $match:
                     { $expr:
                        { $and:
                           [
                             { $eq: [ "$stock_item",  "$$order_item" ] },
                             { $gte: [ "$instock", "$$order_qty" ] }
                           ]
                        }
                     }
                  },
                  { $project: { stock_item: 0, _id: 0 } }
               ],
               as: "stockdata"
             }
        }
    ])


$add

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          <campo>: {
            $add: [ <expressão1>, <expressão2>, ... ] 
          },
        },
      },
    ]);

Exemplo:

    db.products.aggregate([
  {
    $project: {
      item: 1,
      total: {
        $add: ["$price", "$fee"] 
      },
    },
  },
]);


$subtract

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          <campo>: {
            $subtract: [
              <expression1>,
              <expression2>
            ]
          },
        },
      },
    ]);

Exemplo:

    db.products.aggregate([
      {
        $project: {
          item: 1,
          total: {
            $subtract: [
              { $add: ["$price", "$fee"] },
              "$discount"
            ]
          },
        },
      },
    ]);


$ceil

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          roundedNumber: {
            $ceil: <numero>,
          },
        },
      },
    ]);

Exemplo:

    db.movies.aggregate([
      {
        $project: {
          value: 1,
          ceilingValue: {
            $ceil: "$rating",
          },
        },
      },
    ]);


$floor

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          value: 1,
          roundedNumber: {
            $floor: <numero>,
          },
        },
      },
    ]);

Exemplo:

    db.movies.aggregate([
      {
        $project: {
          value: 1,
          floorValue: {
            $floor: "$value",
          },
        },
      },
    ]);


$round

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          value: 1,
          roundedNumber: {
            $round: <numero>,
          },
        },
      },
    ]);

Exemplo:

    db.samples.aggregate([
      { $project: { value: 1, roundedValue: { $round: ["$value", 1] } } }
    ])


$abs

Sintaxe:

    db.collection.aggregate([
      {
        project: {
          <campo>: {
            $abs: <numero>,
          },
        },
      },
    ]);

Exemplo:

    db.operations.aggregate([
      {
        project: {
          delta: {
            $abs: { $subtract: ["$start", "$end"] },
          },
        },
      },
    ]);


$multiply

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          <campo>: {
            $multiply: [ <expressão1>, <expressão2>, ... ]
          },
        },
      },
    ]);

Exemplo:

    db.operations.aggregate([
      {
        $project: {
          date: 1,
          item: 1,
          total: {
            $multiply: [
              "$price",
              "$quantity"
            ]
          },
        },
      },
    ]);


$divide

Sintaxe:

    db.collection.aggregate([
      {
        $project: {
          <campo>: {
            $divide: [ <expressão1>, <expressão2> ]
          },
        },
      },
    ]);

Exemplo:

    db.employees.aggregate([
      {
        $project: {
          name: 1,
          workdays: {
            $divide: ["$hours", 8]
          },
        },
      },
    ]);

$addFields

Sintaxe:

    db.collection.aggregate([
      {
        $addFields: {
          <novoCampo1>: <valor> ,
          <novoCampo2>: <valor> ,
          ...
        },
      },
    ]);

Exemplo:

    db.school.aggregate([
      {
        $addFields: {
          totalHomework: { $sum: "$homework" } ,
          totalQuiz: { $sum: "$quiz" }
        },
      },
      {
        $addFields: {
          totalScore: {
            $add: [ "$totalHomework", "$totalQuiz", "$extraCredit" ]
          },
        },
      },
    ]);

